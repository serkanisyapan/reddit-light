import { SpinnerContainer } from "@/components/LoadingSpinner";
import { Navbar } from "@/components/Navbar";
import { SinglePost } from "@/components/SinglePost";
import { api } from "@/utils/api";
import { generateSSGHelper } from "@/utils/ssgHelper";
import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";

const ProfileFeed = (props: { userId: string }) => {
  const { data, isLoading } = api.post.getPostsByUserId.useQuery(
    {
      userId: props.userId,
    },
    { refetchOnWindowFocus: false }
  );

  if (isLoading) return <SpinnerContainer />;
  if (!data || data.length === 0)
    return (
      <div className="flex h-full items-center text-2xl">
        User does not have any posts.
      </div>
    );

  return (
    <div className="mt-5 flex flex-col gap-3 md:w-full md:max-w-2xl">
      {data.map((post) => (
        <SinglePost {...post} key={post.post.id} />
      ))}
    </div>
  );
};

const ProfilePage: NextPage<{ username: string }> = ({ username }) => {
  const { data } = api.profile.getUserProfile.useQuery(
    {
      username,
    },
    { refetchOnWindowFocus: false }
  );

  if (!data) return <div>404</div>;

  return (
    <>
      <Head>
        <title>{username} - Profile</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <ProfileFeed userId={data.id} />
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const ssg = generateSSGHelper();
  const username = context.params?.slug;
  if (typeof username !== "string") throw new Error("No slug found.");
  await ssg.profile.getUserProfile.prefetch({ username });
  return {
    props: {
      trpcState: ssg.dehydrate(),
      username,
    },
  };
};

export const getStaticPaths = () => {
  return { paths: [], fallback: "blocking" };
};

export default ProfilePage;
